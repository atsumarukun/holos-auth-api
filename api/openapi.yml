openapi: "3.0.3"

info:
  title: "holos auth-api"
  version: "1.0.0"

servers:
  - url: "http://auth-server:8000"
    description: "docker compose service"

paths:
  /users:
    post:
      summary: "ユーザー作成"
      tags:
        - "users"
      requestBody:
        $ref: "#/components/requestBodies/create_user"
      responses:
        201:
          description: "成功"
          $ref: "#/components/responses/create_user"
        500:
          description: "サーバーエラー"
          $ref: "#/components/responses/500"
  /users/{name}:
    put:
      summary: "ユーザー更新"
      tags:
        - "users"
      parameters:
        - in: "path"
          name: "name"
          required: true
          schema:
            $ref: "#/components/schemas/user/properties/name"
      requestBody:
        $ref: "#/components/requestBodies/update_user"
      responses:
        200:
          description: "成功"
          $ref: "#/components/responses/update_user"
        401:
          description: "認証エラー"
          $ref: "#/components/responses/401"
        404:
          description: "存在しないリソース"
          $ref: "#/components/responses/404"
        500:
          description: "サーバーエラー"
          $ref: "#/components/responses/500"
    delete:
      summary: "ユーザー削除"
      tags:
        - "users"
      parameters:
        - in: "path"
          name: "name"
          required: true
          schema:
            $ref: "#/components/schemas/user/properties/name"
      requestBody:
        $ref: "#/components/requestBodies/delete_user"
      responses:
        204:
          description: "成功"
        401:
          description: "認証エラー"
          $ref: "#/components/responses/401"
        404:
          description: "存在しないリソース"
          $ref: "#/components/responses/404"
        500:
          description: "サーバーエラー"
          $ref: "#/components/responses/500"

components:
  schemas:
    created_at:
      type: string
      description: "作成日"
      format: "date-time"
      example: "2017-07-21T17:32:28Z"
      readOnly: true
    updated_at:
      type: string
      description: "更新日"
      format: "date-time"
      example: "2017-07-21T17:32:28Z"
      readOnly: true
    user:
      type: "object"
      properties:
        name:
          type: "string"
          description: "ユーザー名"
          example: "user_name"
        password:
          type: "string"
          description: "パスワード"
          example: "password"
          writeOnly: true
        confirm_password:
          type: "string"
          description: "確認用パスワード"
          example: "password"
          writeOnly: true
        created_at:
          $ref: "#/components/schemas/created_at"
        updated_at:
          $ref: "#/components/schemas/updated_at"
      required:
        - "id"
        - "password"
        - "confirm_password"
        - "created_at"
        - "updated_at"

  requestBodies:
    create_user:
      description: "ユーザー作成"
      required: true
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/user"
    update_user:
      description: "ユーザー更新"
      required: true
      content:
        application/json:
          schema:
            type: "object"
            properties:
              current_password:
                type: "string"
                description: "現在のパスワード"
                example: "current_password"
              new_password:
                type: "string"
                description: "新規パスワード"
                example: "new_password"
              confirm_new_password:
                type: "string"
                description: "確認用新規パスワード"
                example: "new_password"
    delete_user:
      description: "ユーザー削除"
      required: true
      content:
        application/json:
          schema:
            allOf:
              - $ref: "#/components/schemas/user"
              - type: "object"
                properties:
                  name:
                    readOnly: true
                  confirm_password:
                    readOnly: true
  responses:
    create_user:
      description: "ユーザー作成"
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/user"
    update_user:
      description: "ユーザー更新"
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/user"
    401:
      description: "Unauthorized"
      content:
        text/plain:
          schema:
            type: string
            example: "unauthorized"
    404:
      description: "Resource Not Found"
      content:
        text/plain:
          schema:
            type: string
            example: "resource not found"
    500:
      description: "Internal Server Error"
      content:
        text/plain:
          schema:
            type: string
            example: "internal server error"
