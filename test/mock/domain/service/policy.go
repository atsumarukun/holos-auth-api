// Code generated by MockGen. DO NOT EDIT.
// Source: policy.go

// Package mock_service is a generated GoMock package.
package mock_service

import (
	context "context"
	entity "holos-auth-api/internal/app/api/domain/entity"
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockPolicyService is a mock of PolicyService interface.
type MockPolicyService struct {
	ctrl     *gomock.Controller
	recorder *MockPolicyServiceMockRecorder
}

// MockPolicyServiceMockRecorder is the mock recorder for MockPolicyService.
type MockPolicyServiceMockRecorder struct {
	mock *MockPolicyService
}

// NewMockPolicyService creates a new mock instance.
func NewMockPolicyService(ctrl *gomock.Controller) *MockPolicyService {
	mock := &MockPolicyService{ctrl: ctrl}
	mock.recorder = &MockPolicyServiceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockPolicyService) EXPECT() *MockPolicyServiceMockRecorder {
	return m.recorder
}

// GetAgents mocks base method.
func (m *MockPolicyService) GetAgents(arg0 context.Context, arg1 *entity.Policy) ([]*entity.Agent, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetAgents", arg0, arg1)
	ret0, _ := ret[0].([]*entity.Agent)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetAgents indicates an expected call of GetAgents.
func (mr *MockPolicyServiceMockRecorder) GetAgents(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetAgents", reflect.TypeOf((*MockPolicyService)(nil).GetAgents), arg0, arg1)
}
