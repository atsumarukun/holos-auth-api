// Code generated by MockGen. DO NOT EDIT.
// Source: agent.go

// Package mock_usecase is a generated GoMock package.
package mock_usecase

import (
	context "context"
	dto "holos-auth-api/internal/app/api/usecase/dto"
	apierr "holos-auth-api/internal/pkg/apierr"
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
	uuid "github.com/google/uuid"
)

// MockAgentUsecase is a mock of AgentUsecase interface.
type MockAgentUsecase struct {
	ctrl     *gomock.Controller
	recorder *MockAgentUsecaseMockRecorder
}

// MockAgentUsecaseMockRecorder is the mock recorder for MockAgentUsecase.
type MockAgentUsecaseMockRecorder struct {
	mock *MockAgentUsecase
}

// NewMockAgentUsecase creates a new mock instance.
func NewMockAgentUsecase(ctrl *gomock.Controller) *MockAgentUsecase {
	mock := &MockAgentUsecase{ctrl: ctrl}
	mock.recorder = &MockAgentUsecaseMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockAgentUsecase) EXPECT() *MockAgentUsecaseMockRecorder {
	return m.recorder
}

// Create mocks base method.
func (m *MockAgentUsecase) Create(arg0 context.Context, arg1 uuid.UUID, arg2 string) (*dto.AgentDTO, apierr.ApiError) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Create", arg0, arg1, arg2)
	ret0, _ := ret[0].(*dto.AgentDTO)
	ret1, _ := ret[1].(apierr.ApiError)
	return ret0, ret1
}

// Create indicates an expected call of Create.
func (mr *MockAgentUsecaseMockRecorder) Create(arg0, arg1, arg2 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Create", reflect.TypeOf((*MockAgentUsecase)(nil).Create), arg0, arg1, arg2)
}

// Delete mocks base method.
func (m *MockAgentUsecase) Delete(arg0 context.Context, arg1, arg2 uuid.UUID) apierr.ApiError {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Delete", arg0, arg1, arg2)
	ret0, _ := ret[0].(apierr.ApiError)
	return ret0
}

// Delete indicates an expected call of Delete.
func (mr *MockAgentUsecaseMockRecorder) Delete(arg0, arg1, arg2 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Delete", reflect.TypeOf((*MockAgentUsecase)(nil).Delete), arg0, arg1, arg2)
}

// Update mocks base method.
func (m *MockAgentUsecase) Update(arg0 context.Context, arg1, arg2 uuid.UUID, arg3 string) (*dto.AgentDTO, apierr.ApiError) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Update", arg0, arg1, arg2, arg3)
	ret0, _ := ret[0].(*dto.AgentDTO)
	ret1, _ := ret[1].(apierr.ApiError)
	return ret0, ret1
}

// Update indicates an expected call of Update.
func (mr *MockAgentUsecaseMockRecorder) Update(arg0, arg1, arg2, arg3 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Update", reflect.TypeOf((*MockAgentUsecase)(nil).Update), arg0, arg1, arg2, arg3)
}
